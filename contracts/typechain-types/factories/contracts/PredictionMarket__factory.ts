/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PredictionMarket,
  PredictionMarketInterface,
} from "../../contracts/PredictionMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_resolverAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BetCommitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "BetRevealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "MarketCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "category",
        type: "uint8",
      },
    ],
    name: "MarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reasoning",
        type: "string",
      },
    ],
    name: "MarketResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WinningsClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "COMMIT_REVEAL_TIMEOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_BET_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BET_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PLATFORM_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bets",
    outputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "revealedAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculatePayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "cancelMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "claimRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "claimWinnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "commitHash",
        type: "bytes32",
      },
    ],
    name: "commitBet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bytes32",
        name: "commitHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "revealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "category",
        type: "uint8",
      },
    ],
    name: "createMarket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBet",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "marketId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "bool",
            name: "outcome",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "revealedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct PredictionMarket.Bet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getCommitment",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "commitHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revealed",
            type: "bool",
          },
        ],
        internalType: "struct PredictionMarket.Commitment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "category",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesShares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noShares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "participants",
            type: "uint256",
          },
          {
            internalType: "enum PredictionMarket.MarketStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "outcome",
            type: "bool",
          },
          {
            internalType: "string",
            name: "resolutionReasoning",
            type: "string",
          },
        ],
        internalType: "struct PredictionMarket.Market",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketParticipants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "category",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "totalPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yesPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yesShares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noShares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "participants",
        type: "uint256",
      },
      {
        internalType: "enum PredictionMarket.MarketStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "string",
        name: "resolutionReasoning",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingReveals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reasoning",
        type: "string",
      },
    ],
    name: "resolveMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resolverAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "revealBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_resolverAddress",
        type: "address",
      },
    ],
    name: "setResolverAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultAddress",
        type: "address",
      },
    ],
    name: "setVaultAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620000f057601f6200282838819003918201601f19168301916001600160401b03831184841017620000f5578084926040948552833981010312620000f0576200005a602062000052836200010b565b92016200010b565b903315620000d7576000549160018060a01b03908160018060a01b031993338587161760005560405195823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055168360045416176004551690600554161760055560006003556127079081620001218239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000f05756fe608080604052600436101561001357600080fd5b60003560e01c90816304abca541461215057508063309167f51461212c578063399567b9146120da5780633f4ba83a14612070578063430bf08a14612047578063560d52d41461202b5780635b7baf6414611ec75780635c975abb14611ea45780636475e3d314611e82578063677bd9ff14611b7d5780636d1c789f1461019557806370822fd714611927578063715018a6146118ce5780637c16cd9e1461178c5780638456cb591461173257806385535cc5146116ef57806389fb2682146116385780638da5cb5b1461160f57806395082d25146115ec578063b0307a6114611100578063b08c7fac146110d4578063b1283e7714610fa5578063b1db5bec14610f7c578063b726be7f14610f4e578063baaa80bb14610c5e578063c4ebecf2146107a7578063db2e21bc1461072e578063dd28218b146106eb578063e0950ddf146105de578063e90d4c061461056f578063eb44fdd3146102d9578063f2fde38b1461024b578063f644b3bb146101b85763fd69f3c21461019557600080fd5b346101b35760003660031901126101b3576020600354604051908152f35b600080fd5b346101b35760403660031901126101b35760e06101d36121af565b6004356000526008602052604060002060018060a01b038092166000526020526040600020908154916001810154600282015460ff600384015492816005600487015496015416956040519788528116602088015260a01c16151560408601526060850152608084015260a0830152151560c0820152f35b346101b35760203660031901126101b357610264612199565b61026c612664565b6001600160a01b039081169081156102c057600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346101b35760203660031901126101b35760606101e06040516102fb816121fd565b6000815282602082015282604082015260008382015260006080820152600060a0820152600060c0820152600060e08201526000610100820152600061012082015260006101408201526000610160820152600061018082015260006101a082015260006101c0820152015260043560005260066020526040600020604051610383816121fd565b81548152610393600183016122d9565b60208201526103a4600283016122d9565b604082015260038201546001600160a01b031660608201526004808301546080830152600583015460a0830152600683015460ff90811660c0840152600784015460e084015260088401546101008401526009840154610120840152600a840154610140840152600b840154610160840152600c840154610180840152600d8401549391908416101561055957600e6104589160ff858161055597166101a087015260081c1615156101c0850152016122d9565b6101e082015260405191829160208352805160208401526101e06104a66104906020840151610200604088015261022087019061237e565b6040840151868203601f1901606088015261237e565b9160018060a01b036060820151166080860152608081015160a086015260a081015160c086015260ff60c08201511660e086015260e08101516101008601526101008101516101208601526101208101516101408601526101408101516101608601526101608101516101808601526101808101516101a08601526105356101a08201516101c08701906123be565b6101c08101511515858301520151838203601f190161020085015261237e565b0390f35b634e487b7160e01b600052602160045260246000fd5b346101b35760403660031901126101b3576105886121af565b600435600052600760205260406000209060018060a01b03166000526020526080604060002080549060018101549060ff6003600283015492015416916040519384526020840152604083015215156060820152f35b346101b35760403660031901126101b35760e06105f96121af565b600060c0604051610609816121e1565b8281528260208201528260408201528260608201528260808201528260a082015201526004356000526008602052604060002060018060a01b0380921660005260205260406000206040519061065e826121e1565b8054928383526001820154906020840191818116835260ff604086019160a01c1615158152600284015491606086019283526003850154936080870194855260c060ff600560048901549860a08b01998a52015416970196151587526040519788525116602087015251151560408601525160608501525160808401525160a083015251151560c0820152f35b346101b35760203660031901126101b357610704612199565b61070c612664565b600580546001600160a01b0319166001600160a01b0392909216919091179055005b346101b35760003660031901126101b357610747612664565b6000805481908190819047906001600160a01b03165af16107666124ac565b501561076e57005b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b346101b35760603660031901126101b3576107c06123cb565b6107c8612690565b60043560005260066020526107e360406000205415156123da565b6004356000526006602052604060002060ff600d820154166004811015610559578015908115610c53575b5015610c0e5760043560005260076020526040600020336000526020526040600020805461083d81151561242b565b61084e60ff6003840154161561246d565b604051602081019185151560f81b835260443560218301523360601b604183015260358252606082019282841067ffffffffffffffff851117610acd57836040528251902003610bdc575050600181015490600a830154801580610bd0575b15610b205750670de0b6b3a7640000808302908382041483151715610ae357662386f26fc100009004925b600781016108e784825461241e565b90558415610af957600881016108fe84825461241e565b905561090e84600a83015461241e565b600a8201555b600435600052600860205260406000203360005260205260036040600020015460405192610941846121e1565b60043584526109f860208501943386526005604082018a15158152606083018a8152608084018a815260a085019142835260c0860193600085526004356000526008602052604060002033600052602052604060002096518755600187019060018060a01b03809d511682549160ff60a01b9051151560a01b16916affffffffffffffffffffff60a81b161717905551600286015551600385015551600484015551151591019060ff801983541691151516179055565b600301805460ff191660011790556004356000908152600a6020526040902080548015610ae35760001901905515610a6f575b505060405192151583526020830152604082015233907f403919df18953314f70218b572f014af7a4bbed7a7e4e84cd46d195f4a0112fd606060043592a360018055005b600435600052600960205260406000209182549268010000000000000000841015610acd5783610aa6916001600c9601815561216b565b819291549060031b9133831b921b191617905501610ac4815461255c565b90558380610a2b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60098101610b0884825461241e565b9055600b8101610b1985825461241e565b9055610914565b600b840154610b2e9161241e565b80610b5d5750670de0b6b3a7640000808302908382041483151715610ae357662386f26fc100009004926108d8565b8415610bc5576008840154905b81610ba3575050662386f26fc100005b670de0b6b3a764000090818402918483041484151715610ae357610b9d916124ef565b926108d8565b670de0b6b3a764000080830292830403610ae357610bc0916124ef565b610b7a565b600984015490610b6a565b50600b840154156108ad565b906d125b9d985b1a59081c995d99585b60921b60a460649362461bcd60e51b8452602085820152600e60848201520152fd5b60405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f742072657665616c20696e207468697320737461746500000000006044820152606490fd5b60019150148361080e565b346101b35760603660031901126101b357600435610c7a6123cb565b67ffffffffffffffff91906044358381116101b357610c9d903690600401612258565b6005549091906001600160a01b03163303610f19578260005260209160068352610ccd60406000205415156123da565b83600052600683526040600020600d810180549360ff85166004811015610559578015908115610f0e575b5015610ec95760058301544210610e8b57906002600e939215159561ff008760081b169061ffff191617179055018151958611610acd57610d39815461229f565b601f8111610e45575b508395601f8111600114610dbc579081610dac93927f42a997d59f6b8f3a77a30dd8edcd073271da93de0c005b0de8557108641bbb5b9798600091610db1575b508160011b916000199060031b1c19161790555b604080519485948552840152604083019061237e565b0390a2005b905083015189610d82565b601f19811682600052856000209060005b818110610e2e5750916001917f42a997d59f6b8f3a77a30dd8edcd073271da93de0c005b0de8557108641bbb5b989982610dac97969510610e15575b5050811b019055610d96565b85015160001960f88460031b161c191690558980610e09565b858a01518355988701986001909201918701610dcd565b8160005284600020601f880160051c810191868910610e81575b601f0160051c01905b818110610e755750610d42565b60008155600101610e68565b9091508190610e5f565b60405162461bcd60e51b815260048101879052601660248201527513585c9ad95d081b9bdd08195e1c1a5c9959081e595d60521b6044820152606490fd5b60405162461bcd60e51b815260048101879052601b60248201527f4d61726b6574206e6f7420696e20636f727265637420737461746500000000006044820152606490fd5b600191501489610cf8565b60405162461bcd60e51b815260206004820152600d60248201526c27b7363c903932b9b7b63b32b960991b6044820152606490fd5b346101b35760403660031901126101b3576020610f74610f6c6121af565b60043561256b565b604051908152f35b346101b35760003660031901126101b3576005546040516001600160a01b039091168152602090f35b346101b35760203660031901126101b3576004356000526006602052604060002080549060018101610fd6906122d9565b90610fe3600282016122d9565b92600160a01b600190036003830154169160048101546005820154600683015460ff1660078401546008850154600986015491600a87015493600b88015495600c89015497600d8a015499600e0161103a906122d9565b9b6040519e8f9e8f9d8e6102009181528160208201520161105a9161237e565b8d810360408f015261106b9161237e565b6060909c015260808d015260a08c015260c08b015260e08a01526101008901526101208801526101408701526101608601526101808501526110b46101a0850160ff83166123be565b60081c60ff1615156101c08401528281036101e08401526105559161237e565b346101b35760203660031901126101b357600435600052600a6020526020604060002054604051908152f35b346101b35760803660031901126101b35760043567ffffffffffffffff81116101b357611131903690600401612258565b60243567ffffffffffffffff81116101b357611151903690600401612258565b60643560ff811681036101b3576111666126b3565b6103844201804211610ae3576044351115611596576301e133804201804211610ae35760443510156115415782518015159081611535575b50156114f957600760ff8216116114c1576111ba60035461255c565b91826003558260005260066020526040600020838155845167ffffffffffffffff8111610acd576111ee600183015461229f565b601f811161147a575b50806020601f821160011461140d57600091611402575b508160011b916000199060031b1c19161760018201555b815167ffffffffffffffff8111610acd57611243600283015461229f565b601f81116113bb575b509484916020968794601f8211600114611329577f4ee85832e33882aa936ec752c359dd377254716eac2c4e34a0342b3f515c97ea9495829160009261131e575b50508160011b916000199060031b1c19161760028201555b60038101336bffffffffffffffffffffffff60a01b8254161790554260048201556044356005820155600d600682019160ff199260ff8816848254161790550190815416905560ff6113026040519260608452606084019061237e565b94604435888401521660408201528033940390a3604051908152f35b01519050898061128d565b60028301600052886000209060005b601f19841681106113a15750907f4ee85832e33882aa936ec752c359dd377254716eac2c4e34a0342b3f515c97ea95968392600194601f19811610611388575b505050811b0160028201556112a5565b015160001960f88460031b161c19169055898080611378565b818801518355968a01968996506001909201918a01611338565b600283016000526020600020601f830160051c8101602084106113fb575b601f830160051c820181106113ef57505061124c565b600081556001016113d9565b50806113d9565b90508601518761120e565b91506001830160005260206000206000925b601f1983168410611462576001935082601f19811610611449575b5050811b016001820155611225565b88015160001960f88460031b161c19169055878061143a565b8881015182556020938401936001909201910161141f565b600183016000526020600020601f830160051c8101602084106114ba575b601f830160051c820181106114ae5750506111f7565b60008155600101611498565b5080611498565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69642063617465676f727960801b6044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8d2e8d8ca40d8cadccee8d60631b6044820152606490fd5b60c8915011158461119e565b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420657870697265206d6f7265207468616e203120796561722066604482015266726f6d206e6f7760c81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f4d75737420657870697265206174206c65617374203135206d696e757465732060448201526766726f6d206e6f7760c01b6064820152608490fd5b346101b35760003660031901126101b3576020604051670de0b6b3a76400008152f35b346101b35760003660031901126101b3576000546040516001600160a01b039091168152602090f35b346101b35760403660031901126101b3576116516121af565b60006060604051611661816121c5565b8281528260208201528260408201520152600435600052600760205260406000209060018060a01b0316600052602052608060406000206040516116a4816121c5565b815491828252600181015460208301908152606060ff600360028501549460408701958652015416930192151583526040519384525160208401525160408301525115156060820152f35b346101b35760203660031901126101b357611708612199565b611710612664565b600480546001600160a01b0319166001600160a01b0392909216919091179055005b346101b35760003660031901126101b35761174b612664565b6117536126b3565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346101b3576020806003193601126101b3576004359081600052600681526117ba60406000205415156123da565b600082815260068252604090206003810154336001600160a01b03918216149081156118c0575b501561188357600d81019182549160ff8316906004821015610559576118096007921561251c565b0154611840575060ff191660031790557f2ca440fb7fca85d7f55d395a4abd94817330b83a62f3502efbb4770144e4ca97600080a2005b6064906040519062461bcd60e51b825280600483015260248201527f43616e6e6f742063616e63656c20776974682072657665616c656420626574736044820152fd5b60405162461bcd60e51b815260048101839052601560248201527427b7363c9031b932b0ba37b91037b91037bbb732b960591b6044820152606490fd5b9050600054163314846117e1565b346101b35760003660031901126101b3576118e7612664565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b60403660031901126101b3576004356024908135916119446126b3565b61194c612690565b816000526020906006825261196760406000205415156123da565b826000526006825260ff600d60406000200154166004811015611b685761198e901561251c565b8260005260068252600560406000200154421015611b345766038d7ea4c680003410611b035768056bc75e2d631000003411611ad15782600052600782526040600020336000528252604060002054611a9a5750611a4a6040516119f1816121c5565b8481526003838201348152604083014281526060840191600083528760005260078752604060002033600052875260406000209451855551600185015551600284015551151591019060ff801983541691151516179055565b81600052600a81526040600020611a61815461255c565b905560405192835234908301527fc02f2358fe181cc846163d0ca2cd612408cef67a7acdbb92cd09045df0e2fd9a60403393a360018055005b9060116064926040519262461bcd60e51b8452600484015282015270105b1c9958591e4818dbdb5b5a5d1d1959607a1b6044820152fd5b90600c6064926040519262461bcd60e51b845260048401528201526b084cae840e8dede40d0d2ced60a31b6044820152fd5b90600b6064926040519262461bcd60e51b845260048401528201526a42657420746f6f206c6f7760a81b6044820152fd5b90600e6064926040519262461bcd60e51b845260048401528201526d13585c9ad95d08195e1c1a5c995960921b6044820152fd5b50634e487b7160e01b60009081526021600452fd5b346101b3576020806003193601126101b357600435611b9a612690565b8060005260068252611bb260406000205415156123da565b8060005260068252604060002091600d8301549260ff8416600481101561055957600203611e4757826000526008825260406000203360005282526040600020600381015415611e1357600581019182549560ff8716611ddc5760ff80600185015460a01c169160081c169081151590151503611da55715611d9a57600a810154915b8215611d6157611c58929160076002611c53930154910154906124dc565b6124ef565b90600a8202828104600a1483151715610ae357611c7b606460019204809461250f565b9560ff1916179055600080808087335af1611c946124ac565b5015611d2a576004546000918291829182916001600160a01b03165af1611cb96124ac565b5015611cf0577f5380cf6fe903b40c6d5a9e0dfbca2f3a423f0a21520b4d5947ed5169bdba946d906040519384523393a360018055005b6064906040519062461bcd60e51b825260048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b60405162461bcd60e51b815260048101839052600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b60405162461bcd60e51b81526004810186905260116024820152704e6f2077696e6e696e672073686172657360781b6044820152606490fd5b600b81015491611c35565b60405162461bcd60e51b815260048101869052600f60248201526e2132ba103234b2103737ba103bb4b760891b6044820152606490fd5b60405162461bcd60e51b815260048101869052600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606490fd5b60405162461bcd60e51b815260048101849052600c60248201526b139bc818995d08199bdd5b9960a21b6044820152606490fd5b60405162461bcd60e51b815260048101839052601360248201527213585c9ad95d081b9bdd081c995cdbdb1d9959606a1b6044820152606490fd5b346101b35760003660031901126101b357602060405166038d7ea4c680008152f35b346101b35760003660031901126101b357602060ff600254166040519015158152f35b346101b3576020806003193601126101b357600435611ee4612690565b8060005260068252611efc60406000205415156123da565b8060005260068252604060002060ff600d820154169060048210156105595760038214918215611ffe575b505015611fc157600052600781526040600020336000528152600080808060408120611f558154151561242b565b60038101600180825493611f6c60ff86161561246d565b01549260ff1916179055335af1611f816124ac565b5015611f8d5760018055005b6064906040519062461bcd60e51b82526004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152fd5b60405162461bcd60e51b8152600481018390526015602482015274526566756e6473206e6f7420617661696c61626c6560581b6044820152606490fd5b600114915081612011575b508380611f27565b600591500154610e108101809111610ae357421183612009565b346101b35760003660031901126101b3576020604051600a8152f35b346101b35760003660031901126101b3576004546040516001600160a01b039091168152602090f35b346101b35760003660031901126101b357612089612664565b60025460ff8116156120c85760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b346101b35760403660031901126101b3576024356004356000526009602052604060002080548210156101b3576020916121139161216b565b905460405160039290921b1c6001600160a01b03168152f35b346101b35760003660031901126101b357602060405168056bc75e2d631000008152f35b346101b35760003660031901126101b35780610e1060209252f35b80548210156121835760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b03821682036101b357565b602435906001600160a01b03821682036101b357565b6080810190811067ffffffffffffffff821117610acd57604052565b60e0810190811067ffffffffffffffff821117610acd57604052565b610200810190811067ffffffffffffffff821117610acd57604052565b90601f8019910116810190811067ffffffffffffffff821117610acd57604052565b67ffffffffffffffff8111610acd57601f01601f191660200190565b81601f820112156101b35780359061226f8261223c565b9261227d604051948561221a565b828452602083830101116101b357816000926020809301838601378301015290565b90600182811c921680156122cf575b60208310146122b957565b634e487b7160e01b600052602260045260246000fd5b91607f16916122ae565b906040519182600082546122ec8161229f565b9081845260209460019160018116908160001461235c575060011461231d575b50505061231b9250038361221a565b565b600090815285812095935091905b81831061234457505061231b935082010138808061230c565b8554888401850152948501948794509183019161232b565b9250505061231b94925060ff191682840152151560051b82010138808061230c565b919082519283825260005b8481106123aa575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612389565b9060048210156105595752565b6024359081151582036101b357565b156123e157565b60405162461bcd60e51b815260206004820152601560248201527413585c9ad95d08191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b91908201809211610ae357565b1561243257565b60405162461bcd60e51b8152602060048201526013602482015272139bc818dbdb5b5a5d1b595b9d08199bdd5b99606a1b6044820152606490fd5b1561247457565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b3d156124d7573d906124bd8261223c565b916124cb604051938461221a565b82523d6000602084013e565b606090565b81810292918115918404141715610ae357565b81156124f9570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211610ae357565b1561252357565b60405162461bcd60e51b81526020600482015260116024820152704d61726b6574206e6f742061637469766560781b6044820152606490fd5b6000198114610ae35760010190565b906000918252600660205260408220906008602052604083209060018060a01b0316835260205260408220600d82015460ff8116600481101561265057600214801590612631575b6126205760081c60ff161561262657600a820154905b8115612620576125e69260076002611c53930154910154906124dc565b90600a820290828204600a148315171561260c575090606461260992049061250f565b90565b634e487b7160e01b81526011600452602490fd5b50505090565b600b820154906125c9565b5060ff600183015460a01c1660ff8260081c16151590151514156125b3565b634e487b7160e01b85526021600452602485fd5b6000546001600160a01b0316330361267857565b60405163118cdaa760e01b8152336004820152602490fd5b6002600154146126a1576002600155565b604051633ee5aeb560e01b8152600490fd5b60ff600254166126bf57565b60405163d93c066560e01b8152600490fdfea26469706673582212204dd91aba32758c01058d354c46b96a427d6334a872d2c2af0a5b2f629113877e64736f6c63430008180033";

type PredictionMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictionMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictionMarket__factory extends ContractFactory {
  constructor(...args: PredictionMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _vaultAddress: AddressLike,
    _resolverAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _vaultAddress,
      _resolverAddress,
      overrides || {}
    );
  }
  override deploy(
    _vaultAddress: AddressLike,
    _resolverAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _vaultAddress,
      _resolverAddress,
      overrides || {}
    ) as Promise<
      PredictionMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PredictionMarket__factory {
    return super.connect(runner) as PredictionMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictionMarketInterface {
    return new Interface(_abi) as PredictionMarketInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PredictionMarket {
    return new Contract(address, _abi, runner) as unknown as PredictionMarket;
  }
}
